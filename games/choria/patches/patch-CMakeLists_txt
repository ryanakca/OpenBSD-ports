Index: CMakeLists.txt
--- CMakeLists.txt.orig
+++ CMakeLists.txt
@@ -34,7 +34,7 @@ if(NOT CMAKE_BUILD_TYPE)
 endif()
 
 # compiler flags
-set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wall -Wextra -Wno-unused-result -Wno-switch -Wno-unused-parameter -pedantic -std=c++17 -msse -mfpmath=sse")
+set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wall -Wextra -Wno-unused-result -Wno-switch -Wno-unused-parameter -pedantic -std=c++17")
 
 # Set gl preference
 if(NOT DEFINED OpenGL_GL_PREFERENCE)
@@ -132,7 +132,7 @@ if(EXISTS "${PROJECT_SOURCE_DIR}/assets/source/process
 		list(APPEND DATA_SCRIPTS "${SCRIPT_OUTPUT}")
 		add_custom_command(
 			OUTPUT "${SCRIPT_OUTPUT}"
-			COMMAND luac "${STRIP_LUA}" -o "${SCRIPT_OUTPUT}" "${SCRIPT_PATH}"
+			COMMAND luac${MODLUA_DEP_VERSION} "${STRIP_LUA}" -o "${SCRIPT_OUTPUT}" "${SCRIPT_PATH}"
 			DEPENDS "${SCRIPT_PATH}"
 		)
 	endforeach()
@@ -172,8 +172,8 @@ if(WIN32)
 else()
 
 	# linux installation
-	install(TARGETS ${CMAKE_PROJECT_NAME} RUNTIME DESTINATION share/games/${CMAKE_PROJECT_NAME})
-	install(DIRECTORY ${PROJECT_SOURCE_DIR}/working/ DESTINATION share/games/${CMAKE_PROJECT_NAME} PATTERN "working/choria" EXCLUDE PATTERN "working/*")
+	install(TARGETS ${CMAKE_PROJECT_NAME} RUNTIME DESTINATION share/${CMAKE_PROJECT_NAME})
+	install(DIRECTORY ${PROJECT_SOURCE_DIR}/working/ DESTINATION share/${CMAKE_PROJECT_NAME} PATTERN "working/choria" EXCLUDE PATTERN "working/*")
 	install(FILES ${PROJECT_SOURCE_DIR}/deployment/${CMAKE_PROJECT_NAME}.png DESTINATION share/pixmaps)
 	install(FILES ${PROJECT_SOURCE_DIR}/deployment/${CMAKE_PROJECT_NAME}.desktop DESTINATION share/applications)
 	install(FILES ${PROJECT_SOURCE_DIR}/CHANGELOG DESTINATION share/doc/${CMAKE_PROJECT_NAME})
