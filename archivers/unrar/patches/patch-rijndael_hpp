Index: rijndael.hpp
--- rijndael.hpp.orig
+++ rijndael.hpp
@@ -12,6 +12,9 @@
 class Rijndael
 { 
   private:
+#ifdef OPENSSL_AES
+    EVP_CIPHER_CTX *ctx;
+#else    
 #ifdef USE_SSE
     void blockEncryptSSE(const byte *input,size_t numBlocks,byte *outBuffer);
     void blockDecryptSSE(const byte *input, size_t numBlocks, byte *outBuffer);
@@ -31,6 +34,7 @@ class Rijndael
     void keySched(byte key[_MAX_KEY_COLUMNS][4]);
     void keyEncToDec();
     void GenerateTables();
+#endif
 
     // RAR always uses CBC, but we may need to turn it off when calling
     // this code from other archive formats with CTR and other modes.
@@ -41,6 +45,9 @@ class Rijndael
     byte     m_expandedKey[_MAX_ROUNDS+1][4][4];
   public:
     Rijndael();
+#ifdef OPENSSL_AES
+    ~Rijndael();
+#endif    
     void Init(bool Encrypt,const byte *key,uint keyLen,const byte *initVector);
     void blockEncrypt(const byte *input, size_t inputLen, byte *outBuffer);
     void blockDecrypt(const byte *input, size_t inputLen, byte *outBuffer);
